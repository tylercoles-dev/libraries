name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Verify npm version
      run: |
        npm --version
        node --version
    
    - name: Install dependencies
      run: npm ci
    
    - name: Verify workspace configuration
      run: npm run verify
    
    - name: Build all packages
      run: npm run build:order
    
    - name: Lint code
      run: npm run lint
    
    - name: Run tests with coverage
      run: npm run test:coverage
    
    - name: Generate coverage report
      run: npm run coverage:report
      if: matrix.node-version == '20.x'
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '20.x'
      with:
        directory: ./packages
        flags: unittests
        name: codecov-umbrella

  type-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run TypeScript type checking
      run: npx tsc --noEmit --project tsconfig.json

  publish-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build packages
      run: npm run build
    
    - name: Check if packages are publishable
      run: |
        for pkg in packages/*; do
          if [ -d "$pkg" ]; then
            echo "Checking $pkg..."
            cd "$pkg"
            npm pack --dry-run
            cd ../..
          fi
        done
